using Microsoft.AspNetCore.Mvc;
using PenTestDemo.Server.Models;
using System.Reflection;

namespace PenTestDemo.Server.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class MemeController : ControllerBase
    {
        private string _baseUrl = "https://localhost:7107/";
        public MemeController()
        {
        }

        [HttpGet]
        public string Get()
        {
            return "hello world!"; 
        }

        [HttpGet]
        [Route("random")]
        public IActionResult Random()
        {
            string? dir = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\wwwroot\\small\\";
            var files = Directory.EnumerateFiles(dir).Where(f => f.EndsWith(".jpg")).ToArray();
            Random rnd = new Random();
            int idx = rnd.Next(0, files.Count());

            ImageDto img = new ImageDto();
            img.Src = $"{_baseUrl}small/{files[idx].Replace(dir, "")}";
            img.FileName = files[idx].Replace(dir, "");
            return new OkObjectResult(img);
        }

        [HttpGet]
        [Route("use/{name}")]
        public IActionResult Use(string name)
        {
            name = name.Replace("_small", "");

            ImageDto img = new ImageDto();
            img.Src = $"{_baseUrl}images/{name}";
            img.FileName = name;
            return new OkObjectResult(img);
        }

        [HttpPost]
        [Route("upload")]
        public async Task<IActionResult> Upload()
        {
            IFormFile file = Request.Form.Files[0];
            if (file == null)
            {
                throw new Exception("null file");
            }
            if (file.Length == 0)
            {
                throw new Exception("empty file");
            }

            //string? dir = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\wwwroot\\small\\";
            string? dir = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            dir = dir.Replace("\\bin\\Debug\\net8.0", "\\wwwroot\\small");
            var filePath = Path.Combine(dir, file.FileName);
            using (Stream fileStream = new FileStream(filePath, FileMode.Create))
            {
                await file.CopyToAsync(fileStream);
            }
            
            return new OkObjectResult(true);
        }
    }
}
